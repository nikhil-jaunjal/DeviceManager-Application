<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="5" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="642" started-at="2017-12-02T18:30:17Z" finished-at="2017-12-02T18:30:18Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="642" started-at="2017-12-02T18:30:17Z" finished-at="2017-12-02T18:30:18Z">
      <class name="org.neptune.service.tests.TestNGDemo">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.neptune.service.tests.TestNGDemo@617faa95]" name="initMocks" is-config="true" duration-ms="591" started-at="2017-12-03T00:00:17Z" finished-at="2017-12-03T00:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="save_UserAlreadyExistsException_Test(org.neptune.dto.UserInputDto, org.neptune.model.UserEntity)[pri:0, instance:org.neptune.service.tests.TestNGDemo@617faa95]" name="save_UserAlreadyExistsException_Test" duration-ms="16" started-at="2017-12-03T00:00:18Z" data-provider="dataProviderMethod2" finished-at="2017-12-03T00:00:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.neptune.dto.UserInputDto@7ef27d7f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.neptune.model.UserEntity@490caf5f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save_UserAlreadyExistsException_Test -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.neptune.service.tests.TestNGDemo@617faa95]" name="initMocks" is-config="true" duration-ms="1" started-at="2017-12-03T00:00:18Z" finished-at="2017-12-03T00:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="save_invalidEmail_Test(org.neptune.dto.UserInputDto)[pri:0, instance:org.neptune.service.tests.TestNGDemo@617faa95]" name="save_invalidEmail_Test" duration-ms="1" started-at="2017-12-03T00:00:18Z" data-provider="dataProviderMethod1" finished-at="2017-12-03T00:00:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.neptune.dto.UserInputDto@73a8da0f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save_invalidEmail_Test -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.neptune.service.tests.TestNGDemo@617faa95]" name="initMocks" is-config="true" duration-ms="1" started-at="2017-12-03T00:00:18Z" finished-at="2017-12-03T00:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="save_invalidFirstName_Test(org.neptune.dto.UserInputDto)[pri:0, instance:org.neptune.service.tests.TestNGDemo@617faa95]" name="save_invalidFirstName_Test" duration-ms="1" started-at="2017-12-03T00:00:18Z" data-provider="dataProviderMethod1" finished-at="2017-12-03T00:00:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.neptune.dto.UserInputDto@732d0d24]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save_invalidFirstName_Test -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.neptune.service.tests.TestNGDemo@617faa95]" name="initMocks" is-config="true" duration-ms="1" started-at="2017-12-03T00:00:18Z" finished-at="2017-12-03T00:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="save_invalidLastName_Test(org.neptune.dto.UserInputDto)[pri:0, instance:org.neptune.service.tests.TestNGDemo@617faa95]" name="save_invalidLastName_Test" duration-ms="1" started-at="2017-12-03T00:00:18Z" data-provider="dataProviderMethod1" finished-at="2017-12-03T00:00:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.neptune.dto.UserInputDto@18e36d14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save_invalidLastName_Test -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.neptune.service.tests.TestNGDemo@617faa95]" name="initMocks" is-config="true" duration-ms="1" started-at="2017-12-03T00:00:18Z" finished-at="2017-12-03T00:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="save_invalidUserId_Test(org.neptune.dto.UserInputDto)[pri:0, instance:org.neptune.service.tests.TestNGDemo@617faa95]" name="save_invalidUserId_Test" duration-ms="1" started-at="2017-12-03T00:00:18Z" data-provider="dataProviderMethod1" finished-at="2017-12-03T00:00:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.neptune.dto.UserInputDto@75d2da2d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- save_invalidUserId_Test -->
      </class> <!-- org.neptune.service.tests.TestNGDemo -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
